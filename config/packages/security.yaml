


security:
    encoders:
        App\Entity\Usuario:
            algorithm: sha512

    providers:
        app_user_provider:
            entity:
                class: App\Entity\Usuario
                property: username

    firewalls:
        login:
            pattern:  ^/api/user/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/user/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api/v1
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        #dev:
        #    pattern: ^/(_(profiler|wdt)|css|images|js)/
        #    security: false
        #main:
        #    anonymous: true

                # activate different ways to authenticate
                # https://symfony.com/doc/current/security.html#firewalls-authentication

                # https://symfony.com/doc/current/security/impersonating_user.html
                # switch_user: true

            # Easy way to control access for large sections of your site
            # Note: Only the *first* access control that matches will be used

    access_control:
        - { path: ^/api/user/login_check,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/user/profile, roles: IS_AUTHENTICATED_FULLY }



